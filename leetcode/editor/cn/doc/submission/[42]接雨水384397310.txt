class Solution {
	public int trap(int[] height) {
		int len = height.length;
		if (len <= 2) {
			return 0;
		}
		int res = 0;
		int l_max = height[0], r_max = height[len - 1];
		int left = 0, right = len - 1;
		while (left <= right) {
			l_max = Math.max(l_max, height[left]);
			r_max = Math.max(r_max, height[right]);
			if (l_max > r_max) {
				res += r_max - height[right];
				right--;
			} else {
				res += l_max - height[left];
				left++;
			}
		}
		return res;
	}
}
//runtime:0 ms
//memory:42.6 MB
