class Solution {
	public int jump(int[] nums) {
		if (nums == null || nums.length == 0 || nums.length == 1) {
			return 0;
		}
		int maxCoverRange = 0;
		int curCoverRange = 0;
		int count = 0;
		for (int i = 0; i < nums.length; i++) {
			maxCoverRange = Math.max(maxCoverRange, nums[i] + i);
			if (maxCoverRange >= nums.length - 1) {
				count++;
				return count;
			}
			if (i == curCoverRange) {
				curCoverRange = maxCoverRange;
				count++;
			}
		}
		return count;

	}
}
//runtime:1 ms
//memory:41.7 MB
